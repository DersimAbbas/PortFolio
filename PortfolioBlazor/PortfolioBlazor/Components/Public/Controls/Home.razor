@page "/"
@using PortfolioBlazor.Models
@using PortfolioBlazor.Server
@using PortfolioBlazor.Services
@using Microsoft.AspNetCore.Components.Web
@inject IJSRuntime jsruntime
@inject NavigationManager navigator
@inject MinimalApi server

<!-- Main Content -->
<div class="container-fluid pt-5 text-white text-center">
    <div id="particles-js"></div>
        <div class="d-flex flex-column align-items-center">
            <img src="/Images/Dersim2.jpg" class="rounded-circle animate__animated animate__fadeInLeft" alt="Dersim Abbas Profile" style="max-width:200px;" />
           <p class="display-6 fw-bold ">Hi! I’m Dersim Abbas - Junior DevOps Engineer</p>

            <!-- Typewriter Tagline -->
            <p class="typewriter-text text-break fs-4">Empowering Continuous Delivery, Automation, and Cloud Scalability with Modern DevOps Practices.</p>

            <p class="mb-4 fs-5">From CI/CD pipelines to Infrastructure as Code, I help bridge the gap between Development and Operations.</p>
            <p class="fs-5">Use the terminal at the bottom for interacting and fun experience! Alternatives: buttons.</p>
            <div class="p-2"style="z-index:50;">
                <button class="btn btn-success btn-lg">View Projects</button>
                <button class="btn btn-outline-success btn-lg" type="button" @onclick="SkillsBtn">Explore Skills</button>
            </div>
        @foreach(var skill in Skills)
        {
            
            <ProjectTest Skill="skill" />
        }
    </div>
    
</div>

   <DevOpsTerminal />

@code {

    private bool Display = false;
    private List<TechsModel>? Skills = new();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await jsruntime.InvokeVoidAsync("loadParticles");
        }
    }
    protected override async Task OnInitializedAsync()
    {
        Skills = await server.FetchTechsAsync();
    }

    private void SkillsBtn()
    {
        navigator.NavigateTo("/portfolio");
    }
    

}
