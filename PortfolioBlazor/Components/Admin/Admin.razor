@page "/admin"
@inject HttpClient http
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@layout AdminLayout
@inject IJSRuntime jsruntime


@if (IsAuthorized == null)
{
    <p>Loading..</p>
}
else
{
   
     
        <div class="container-fluid p-5" style="z-index:3000; position:relative">

            <div class="text-center text-dark fw-bold">
                <h1>Admin Page</h1>
                <p class="fs-5">Welcome to the Admin Panel! now do whatever you want king.</p>
                <h3>Todays Weather</h3>
            </div>
            
            <div class="d-flex justify-content-center mt-3">
                <div id="openweathermap-widget-15"></div>
            
                <script>
                    window.myWidgetParam ? window.myWidgetParam : window.myWidgetParam = []; 
                    window.myWidgetParam.push({ id: 15, cityid: '2711537', appid: '5f547e530c9e01e06ac39e2efeab164c', units: 'metric', containerid: 'openweathermap-widget-15', }); 
                    (function () { var script = document.createElement('script'); 
                    script.async = true; script.charset = "utf-8"; script.src = "//openweathermap.org/themes/openweathermap/assets/vendor/owm/js/weather-widget-generator.js"; 
                    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(script, s); 
                    })();
                </script>
            </div>
      
            <div class="d-flex justify-content-center mt-3 gap-3">
                <button class="btn btn-primary" @onclick="SkillsBtn">Manage Skills</button>   
                <button class="btn btn-success" @onclick="ProjectsBtn">Manage Projects</button>
            </div>

            <div class="d-flex justify-content-center m-5">
                <button class="btn btn-primary"@onclick="LogOutBtn">Logout</button>

            </div>

        </div>
   

    
        <div id="cloud-js" style="z-index:0"></div>
}


@code {
    private List<TechsModel>? skills = new();
    private TechsModel? selectedSkill;
    private string? editingSkillId = null;
    private bool DisplayForm = false;
    private bool? IsAuthorized;


    private void ProjectsBtn()
    {
        Navigation.NavigateTo("admin/projects");
    }
    private void SkillsBtn()
    {
        Navigation.NavigateTo("admin/skills");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            await jsruntime.InvokeVoidAsync("loadClouds");
            var token = await jsruntime.InvokeAsync<string>("localStorage.getItem", "authToken");
            IsAuthorized = !string.IsNullOrEmpty(token);
            if (IsAuthorized.HasValue && IsAuthorized.Value == false)
            {
                Navigation.NavigateTo("/login");
            }
            StateHasChanged();
        }
    }
    private async Task LogOutBtn()
    {
        await jsruntime.InvokeVoidAsync("localStorage.clear");
        Navigation.NavigateTo("/login");
    }
}
